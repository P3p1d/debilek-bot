import random
import discord
import datetime
from pymongo import *
from discord.ext import commands

class Economy:
	def __init__(self,bot):
		self.bot = bot
		self.d=MongoClient(os.environ["MONGOURI"]).debilek
	@commands.command(pass_context = True,no_pm=True,aliases=["ekonomy","ekonomika","‚Ç¨","balance","bilance"])
	@commands.cooldown(rate=1, per=5, type=commands.BucketType.user)
	async def economy(self,ctx,user:discord.Member = None):
		await self.bot.send_typing(ctx.message.channel)
		server = str(ctx.message.server.id)
		if user is None:
			user = ctx.message.author
		acc = self.d[server].find_one({"name":str(user)})
		if acc is None:
			self.d[server].insert_one({"name":str(user),"amount":500})
			await self.bot.say(f"`√öƒçet pro {user.display_name} byl zalo≈æen!`")
		else:
			await self.bot.say(f"`{user.display_name} m√° na √∫ƒçtƒõ {acc['amount']} pen√≠zk≈Ø`")
	
	@commands.command(pass_context = True,no_pm=True,aliases=["denne","deni","dailyscheckel","neetbux","≈°ekel"])
	@commands.cooldown(rate=1, per=10, type=commands.BucketType.user)
	async def daily(self,ctx):
		await self.bot.send_typing(ctx.message.channel)
		user = ctx.message.author
		server = str(ctx.message.server.id)
		acc = self.d[server].find_one({"name":str(user)})
		if acc is None:
			self.d[server].insert_one({"name":str(user),"amount":750,"last_daily":datetime.datetime.utcnow()})
			return await self.bot.say("250:dollar: p≈ôid√°no!")
		elif "last_daily" not in acc:
			self.d[server].update_one({"name":str(user)},{"$set":{"last_daily":datetime.datetime.utcnow(),"amount":acc["amount"]+250}})
			return await self.bot.say("250:dollar: p≈ôid√°no!")
		t = (datetime.datetime.utcnow()-acc["last_daily"]).days
		if t < 0:
			return await self.bot.say("`Dne≈°n√≠ p≈ô√≠dƒõl ≈°ekel≈Ø u≈æ jsi dostal, p≈ôijƒè zas p≈ô√≠≈°tƒõ!`")
		self.d[server].update_one({"name":str(user)},{"$set":{"last_daily":datetime.datetime.utcnow(),"amount":acc["amount"]+250}})
		await self.bot.say("250:dollar: p≈ôid√°no!")

	@commands.command(pass_context = True,no_pm=True,aliases=["susenka","üç™","biscuit"])
	@commands.cooldown(rate=1, per=5, type=commands.BucketType.user)
	async def cookie(self,ctx,user:discord.Member = None):
		await self.bot.send_typing(ctx.message.channel)
		if user is None:
			return await self.bot.say("Nikoho jsi neoznaƒçil!")
		server = str(ctx.message.server.id)
		acc = self.d[server].find_one({"name":str(user)})
		aut=self.d[server].find_one({"name":str(ctx.message.author)})
		if acc is None:
			return await self.bot.say(f"`{user.display_name} si je≈°tƒõ nezalo≈æil √∫ƒçet pomoc√≠ ¬ßeconomy !`")
		elif aut is None:
			return await self.bot.say("`Nem≈Ø≈æe≈° rozd√°vat su≈°enky ani≈æ by sis zalo≈æil √∫ƒçet pomoc√≠ ¬ßeconomy !`")
		if aut["amount"]<10:
			return await self.bot.say("`Jedna su≈°enka stoj√≠ 10 ≈°ekel≈Ø, a to ty jaksi nem√°≈°`")
		self.d[server].update_one({"name":str(user)},{"$set":{"amount":acc["amount"]+10}})
		self.d[server].update_one({"name":str(ctx.message.author)},{"$set":{"amount":aut["amount"]-10}})
		await self.bot.say(f"`{ctx.message.author.display_name} poslal {user.display_name} su≈°enku!`")

	@commands.command(pass_context = True,no_pm=True,aliases=["thief","kradez"])
	@commands.cooldown(rate=1, per=5, type=commands.BucketType.user)
	async def steal(self,ctx,user:discord.Member=None):
		await self.bot.send_typing(ctx.message.channel)
		if user is None:
			return await self.bot.say("A koho chce≈° teda okr√°st?")
		if user == str(ctx.message.author):
			return await self.bot.say("Proƒç by jsi okr√°dal s√°m sebe?")
		chance = random.randint(0,10)
		server = str(ctx.message.server.id)
		acc = self.d[server].find_one({"name":str(user)})
		aut=self.d[server].find_one({"name":str(ctx.message.author)})
		if acc is None or aut is None:
			return await self.bot.say("Jeden z v√°s si je≈°tƒõ nezalo≈æil √∫ƒçet")
		
		if chance>=5:
			stolen = random.randrange(0,501,10)
			if acc["amount"]-stolen<0:
				stolen = acc["amount"]
			if acc["amount"]<=0:
				return await self.bot.say("P≈ôece bys neokradl nƒõkoho kdo nem√° ani na su≈°enku, ≈æe ne?") 
			self.d[server].update_one({"name":str(user)},{"$set":{"amount":acc["amount"]-stolen}})
			self.d[server].update_one({"name":str(ctx.message.author)},{"$set":{"amount":aut["amount"]+stolen}})
			await self.bot.say(f"{ctx.message.author.display_name} ukradl {user.display_name} {stolen}:dollar:!")
		else:
			stolen = random.randrange(100,551,10)
			self.d[server].update_one({"name":str(ctx.message.author)},{"$set":{"amount":aut["amount"]-stolen}})
			await self.bot.say(f":oncoming_police_car:{ctx.message.author.display_name} naƒçapala policie p≈ôi ƒçinu! Pokuta ƒçin√≠ {stolen} ≈°ekel≈Ø")

	@commands.command(pass_context = True,no_pm=True,aliases=["roulete","ruleta"])
	@commands.cooldown(rate=1, per=5, type=commands.BucketType.user)
	async def automat(self,ctx,mlt,amount):
		await self.bot.send_typing(ctx.message.channel)
		try:
			mlt = float(mlt)
			amount = int(amount)
		except:
			return await self.bot.say("Jedna z hodnot je ≈°patnƒõ!")		
		if mlt<=1:
			return self.bot.say("N√°sobitel mus√≠ b√Ωt vƒõt≈°√≠ ne≈æ jedna!")
		chance = 1/mlt
		server = str(ctx.message.server.id)
		a = self.d[server].find_one({"name":str(ctx.message.author)})
		if a is None:
			return await self.bot.say("Je≈°tƒõ sis nezalo≈æil √∫ƒçet!")
		if a["amount"]<amount:
			return await self.bot.say("Chtƒõl si vsadit v√≠c penƒõz ne≈æ m√°≈° na √∫ƒçtƒõ!")
		if random.random() > chance:
			self.d[server].update_one({"name":str(ctx.message.author)},{"$set":{"amount":a["amount"]-amount}})
			return await self.bot.say(f"`{ctx.message.author.display_name} prohr√°l {float(amount)} ≈°ekel≈Ø!`")
		won = mlt*amount
		self.d[server].update_one({"name":str(ctx.message.author)},{"$set":{"amount":a["amount"]+won}})
		await self.bot.say(f"`{ctx.message.author.display_name} vyhr√°l v automatu {won} ≈°ekel≈Ø!`")

def setup(bot):
	bot.add_cog(Economy(bot))